// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node/node.proto

package node

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeStatusResponse_Status int32

const (
	NodeStatusResponse_READY   NodeStatusResponse_Status = 0
	NodeStatusResponse_SLEEP   NodeStatusResponse_Status = 1
	NodeStatusResponse_WORKING NodeStatusResponse_Status = 2
)

var NodeStatusResponse_Status_name = map[int32]string{
	0: "READY",
	1: "SLEEP",
	2: "WORKING",
}

var NodeStatusResponse_Status_value = map[string]int32{
	"READY":   0,
	"SLEEP":   1,
	"WORKING": 2,
}

func (x NodeStatusResponse_Status) String() string {
	return proto.EnumName(NodeStatusResponse_Status_name, int32(x))
}

func (NodeStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a18530e439628818, []int{0, 0}
}

type NodeStatusResponse struct {
	Status               NodeStatusResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=node.NodeStatusResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *NodeStatusResponse) Reset()         { *m = NodeStatusResponse{} }
func (m *NodeStatusResponse) String() string { return proto.CompactTextString(m) }
func (*NodeStatusResponse) ProtoMessage()    {}
func (*NodeStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a18530e439628818, []int{0}
}

func (m *NodeStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatusResponse.Unmarshal(m, b)
}
func (m *NodeStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatusResponse.Marshal(b, m, deterministic)
}
func (m *NodeStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatusResponse.Merge(m, src)
}
func (m *NodeStatusResponse) XXX_Size() int {
	return xxx_messageInfo_NodeStatusResponse.Size(m)
}
func (m *NodeStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatusResponse proto.InternalMessageInfo

func (m *NodeStatusResponse) GetStatus() NodeStatusResponse_Status {
	if m != nil {
		return m.Status
	}
	return NodeStatusResponse_READY
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a18530e439628818, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("node.NodeStatusResponse_Status", NodeStatusResponse_Status_name, NodeStatusResponse_Status_value)
	proto.RegisterType((*NodeStatusResponse)(nil), "node.NodeStatusResponse")
	proto.RegisterType((*Empty)(nil), "node.Empty")
}

func init() {
	proto.RegisterFile("node/node.proto", fileDescriptor_a18530e439628818)
}

var fileDescriptor_a18530e439628818 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0xcb, 0x4f, 0x49,
	0xd5, 0x07, 0x11, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6, 0x52, 0x15, 0x97,
	0x90, 0x5f, 0x7e, 0x4a, 0x6a, 0x70, 0x49, 0x62, 0x49, 0x69, 0x71, 0x50, 0x6a, 0x71, 0x41, 0x7e,
	0x5e, 0x71, 0xaa, 0x90, 0x39, 0x17, 0x5b, 0x31, 0x58, 0x44, 0x82, 0x51, 0x81, 0x51, 0x83, 0xcf,
	0x48, 0x5e, 0x0f, 0xac, 0x11, 0x53, 0xa5, 0x1e, 0x94, 0x0b, 0x55, 0xae, 0xa4, 0xcd, 0xc5, 0x06,
	0x11, 0x11, 0xe2, 0xe4, 0x62, 0x0d, 0x72, 0x75, 0x74, 0x89, 0x14, 0x60, 0x00, 0x31, 0x83, 0x7d,
	0x5c, 0x5d, 0x03, 0x04, 0x18, 0x85, 0xb8, 0xb9, 0xd8, 0xc3, 0xfd, 0x83, 0xbc, 0x3d, 0xfd, 0xdc,
	0x05, 0x98, 0x94, 0xd8, 0xb9, 0x58, 0x5d, 0x73, 0x0b, 0x4a, 0x2a, 0x8d, 0xec, 0xb8, 0x58, 0x40,
	0x46, 0x0b, 0x99, 0x71, 0x71, 0x3b, 0x67, 0xa4, 0x26, 0x67, 0x43, 0x8d, 0xe0, 0x86, 0xd8, 0x0a,
	0x56, 0x23, 0x25, 0x81, 0xcb, 0x09, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x1f, 0x19, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xcf, 0xaa, 0x7a, 0xf8, 0xe4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	CheckStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NodeStatusResponse, error)
}

type nodeClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeClient(cc grpc.ClientConnInterface) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) CheckStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NodeStatusResponse, error) {
	out := new(NodeStatusResponse)
	err := c.cc.Invoke(ctx, "/node.Node/CheckStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	CheckStatus(context.Context, *Empty) (*NodeStatusResponse, error)
}

// UnimplementedNodeServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServer struct {
}

func (*UnimplementedNodeServer) CheckStatus(ctx context.Context, req *Empty) (*NodeStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckStatus not implemented")
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_CheckStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).CheckStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/CheckStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).CheckStatus(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "node.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckStatus",
			Handler:    _Node_CheckStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node/node.proto",
}
